(set-logic QF_UF)
(declare-sort S0 0)
(declare-fun v0 () S0)
(declare-fun v1 () S0)
(declare-fun f0 (S0) S0)
(declare-fun f1 (S0 S0 S0) S0)
(declare-fun f2 (S0 S0 S0) S0)
(declare-fun f3 (S0 S0) S0)
(declare-fun f4 (S0) S0)
(declare-fun p1 (S0 S0) Bool)
(declare-fun p2 (S0) Bool)
(declare-fun p3 (S0) Bool)
(assert (let ((e2 (f0 v0))) (let ((e3 (f1 e2 v0 v1))) (let ((e4 (f2 e2 e2 e2))) (let ((e5 (f4 v1))) (let ((e6 (f0 e3))) (let ((e7 (f3 e2 e3))) (let ((e26 (p1 e2 e7))) (let ((e31 (ite false e6 e2))) (let ((e34 (ite false e7 e5))) (let ((e35 (ite false e5 e31))) (let ((e36 (ite false e3 e4))) (let ((e39 (ite false e5 e4))) (let ((e42 (ite false e35 e39))) (let ((e43 (ite false e34 v1))) (let ((e44 (ite false e43 e43))) (let ((e46 (ite false e6 e35))) (let ((e53 (ite false e39 e46))) (let ((e54 (ite false e36 e31))) (let ((e56 (ite false v0 e44))) (let ((e62 (p1 e54 e42))) (let ((e63 (p3 e53))) (let ((e73 (p3 e56))) (let ((e76 (p2 e42))) (let ((e113 (and false e73))) (let ((e114 (or false e26))) (let ((e116 (or e63 false))) (let ((e117 (or e62 e62))) (let ((e119 (or e76 false))) (let ((e121 (=> false e113))) (let ((e123 (ite false false e116))) (let ((e127 (or false e119))) (let ((e131 (ite false e121 e121))) (let ((e133 (xor false e114))) (let ((e134 (or e117 e131))) (let ((e135 (not e134))) (let ((e137 (= e133 false))) (let ((e142 (xor false e137))) (let ((e144 (=> e135 false))) (let ((e147 (or e144 e144))) (let ((e149 (xor e127 e123))) (let ((e151 (or e142 e142))) (let ((e153 (= false e147))) (let ((e154 (and e153 false))) (let ((e155 (=> false e154))) (let ((e156 (= false e151))) (let ((e158 (or e149 e156))) (let ((e159 (or e158 false))) (let ((e160 (xor e159 false))) (let ((e161 (or e155 false))) (let ((e162 (or e161 e161))) (let ((e163 (xor e160 e160))) (let ((e164 (not e162))) (let ((e165 (not e164))) (let ((e166 (=> e163 e165))) e166)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)

