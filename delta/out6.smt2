(set-logic QF_UF)
(declare-sort S0 0)
(declare-sort S1 0)
(declare-fun v0 () S0)
(declare-fun v2 () S0)
(declare-fun v3 () S0)
(declare-fun v4 () S0)
(declare-fun f0 (S0) S0)
(declare-fun f1 (S0 S0 S0) S0)
(declare-fun p3 (S0 S0 S0) Bool)
(assert
 (let ((e6 (f0 v3)))
 (let ((e8 (f0 v0)))
 (let ((e12 (f1 v2 v0 e8)))
 (let ((e13 (f0 v3)))
 (let ((e16 (f1 e13 e12 v2)))
 (let ((e17 (f1 e13 v0 v0)))
 (let ((e18 (f1 e6 e16 e6)))
 (let ((e19 (f1 e13 e17 e13)))
 (let ((e45 (ite false v0 e19)))
 (let ((e50 (ite false e8 v4)))
 (let ((e59 (ite false e17 v0)))
 (let ((e60 (ite false e18 v0)))
 (let ((e65 (ite false e50 e19)))
 (let ((e71 (ite false v4 e16)))
 (let ((e90 (p3 e59 e45 v0)))
 (let ((e91 (distinct e65 e45)))
 (let ((e97 (distinct e71 e60)))
 (let ((e140 (ite e91 false false)))
 (let ((e151 (ite e140 false false)))
 (let ((e172 (ite false e97 false)))
 (let ((e175 (ite e90 false e151)))
 (let ((e182 (xor e172 e172)))
 (let ((e183 (and e182 e175)))
 (let ((e184 (not e183)))
 e184)))))))))))))))))))))))))
(check-sat)

