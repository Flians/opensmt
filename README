+------------------------------------------------------------------------------+
| OpenSMT2                                                                     |
|                                                                              |
| Copyright 2016 Antti Hyvarinen <antti.hyvarinen@gmail.com>                   |
| Copyright 2009 Roberto Bruttomesso <roberto.bruttomesso@gmail.com>           |
|                                                                              |
| Project page......: http://verify.inf.usi.ch/opensmt                         |
| Discussion Group..: http://groups.google.com/group/opensmt                   |
|                                                                              |
| OpenSMT is distributed in the hope that it will be useful,                   |
| but WITHOUT ANY WARRANTY; without even the implied warranty of               |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                         |
+------------------------------------------------------------------------------+

OpenSMT2 supports reading files in smtlib2 format and the theories QF_UF, QF_LRA
and QF_RDL.  The system also provides an api; the distribution includes a
minimal example how to use the API.

+------------------------------------------------------------------------------+
| Compliation                                                                  |
+------------------------------------------------------------------------------+

To compile the system from the source code repository, you need a c++11
compliant compiler and the following libraries installed:

 - gmp
 - readline
 - zlib

in addition the compilation system relies on autoconf and the smtlib2 parser on
flex and bison.  To compile OpenSMT2, use the following command

$ autoreconf --force --install; ./configure; make install

To enable the library compilation (if you want to use the API) you should use
the configure flag --enable-library.  Configure supports a number of compilation
options.  For example if gmp is not installed in a standard location, use
--with-gmp=<path>.

+------------------------------------------------------------------------------+
| Using OpenSMT2 as a library through the C/C++ API                                  |
+------------------------------------------------------------------------------+

To install OpenSMT2 library you need to configure with

$ ./configure --enable-library
$ ./configure --disable-optimization --enable-proof --enable-library

This will compile two libraries: a complete version called libopensmt2,
and a simplified C library called libopensmt2c.

There are two simple examples on how to use the OpenSMT API in directory

  examples/test.cc
  examples/test_c.cc

one for using libopensmt2 and the other for using libopensmt2c

If you have installed the OpenSMT2 library you can compile the first file by running

 $ g++ -std=c++11 -o test test.cc -lopensmt2 -lgmp -lgmpxx -lz -lreadline

and the second file by running

 $ gcc -o test_c test_c.c -lopensmt2c -lgmp -lgmpxx -lz -lreadline

If your libraries and headers are installed in non-standard locations you might
need to specify these with -L and -I, respectively, and set the
LD_LIBRARY_PATH variable accordingly.

+------------------------------------------------------------------------------+
| Using OpenSMT2 as a library through the Python API                           |
+------------------------------------------------------------------------------+

We provide an experimental Python interface for OpenSMT2.  The interface
is available if the library is built and you have SWIG installed.  The
python bindings can be compiled by running the script

  $ ./get-python-wrappers.sh

You need to set up the scripts right for running this since compiling
the bindings is not yet integrated to the build system.  There is an
example python file in

  examples/test.py

Also here you possibly need to set the LD_LIBRARY_PATH variable

+------------------------------------------------------------------------------+
| Using OpenSMT2 interpolation                                                 |
+------------------------------------------------------------------------------+

OpenSMT supports a range of interpolation options.  To enable
interpolation code the compilation needs to be configured with

$ ./configure --enable-proof

Interpolation works also through the library, but in this case care must
be taken that the binary to be linked against the library is configured
with the same pre-processor directives as the library itself.

If you have questions please mail them to me at
antti.hyvarinen@gmail.com, or to the discussion forum!


